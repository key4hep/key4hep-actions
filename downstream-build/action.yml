name: 'Build downstream'
description: 'Build dependent packages and branches'
runs:
  using: "composite"
  steps:
    - name: Start container
      shell: bash
      run: |
        docker run -it --name CI_container -v ${GITHUB_WORKSPACE}:/Package/main -v /cvmfs:/cvmfs:shared -d ghcr.io/key4hep/key4hep-images/alma9:latest /bin/bash

    - shell: bash
      run: |
        echo $PWD
        ls -lah
        cat <<'EOF' > ${GITHUB_WORKSPACE}/script_container.sh
        cd ./Package

        # Set up cvmfs to get git, python, etc and then
        # set up spack and key4hep-spack to match the commits
        # used for building so that none of the packages of the build are rebuilt
        source /cvmfs/sw-nightlies.hsf.org/key4hep/setup.sh
        rel=$(find /cvmfs/sw-nightlies.hsf.org/key4hep/releases/ -maxdepth 3 -type f -wholename "*almalinux9*/.scratch" | sort -r | head -1)
        rel=$(dirname $rel)
        echo "rel is $rel"

        git clone https://github.com/spack/spack --single-branch
        cd spack
        git checkout $(cat $rel/.spack-commit)
        source $rel/.cherry-pick
        cd ..

        source spack/share/spack/setup-env.sh

        git clone https://github.com/key4hep/key4hep-spack --single-branch
        cd key4hep-spack
        git checkout $(cat $rel/.key4hep-spack-commit)
        spack env activate environments/key4hep-nightly
        cd ..

        name=$(echo "${{ github.event.repository.name }}" | tr "[:upper:]" "[:lower:]")
        echo $name

        git clone https://github.com/key4hep/key4hep-dev-utils --depth 1
        branch_packages=$(python3 /Package/key4hep-dev-utils/scripts/parse.py " ${{ github.event.pull_request.body }} " ) 
        echo "branch_packages = $branch_packages"
        latest_rel=$(find /cvmfs/sw-nightlies.hsf.org/key4hep/releases/ -maxdepth 3 -type f -wholename "*almalinux9*/.spack-commit" | sort -r | head -1)
        latest_rel=$(dirname $latest_rel)
        if [ "$rel" != "$latest_rel" ]; then \
          spack config add "upstreams:nightly_latest:install_tree: $latest_rel"
        fi
        spack config add "upstreams:nightly:install_tree: $rel"
        mkdir /Workarea
        cd /Workarea
        python3 /Package/key4hep-dev-utils/scripts/fetch_and_checkout.py $name "$branch_packages"

        for package in $(ls)
        do
            cd package
            mkdir build
            cd build
            cmake .. -G Ninja
            ninja install
            ctest -j $(nproc)
            cd ../..
        done
        # cd main
        # default_branch="${{ github.base_ref }}"
        # echo default_branch is $default_branch

        EOF

        cat ${GITHUB_WORKSPACE}/script_container.sh

        docker exec CI_container /bin/bash /Package/main/script_container.sh
