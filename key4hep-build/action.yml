name: Key4hep build
description: Build and test using the Key4hep stack

inputs:
  build_type:
    description: release or nightly
    required: true
  image:
    description: alma9, ubuntu22
    required: true

runs:
  using: "composite"
  steps:
    - shell: bash
      run: echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - uses: actions/cache@v4
      with:
        path: ~/.cache/ccache
        key: ${{ inputs.build_type }}-${{ inputs.image }}-${{ env.NOW }}
        restore-keys: |
          ${{ inputs.build_type }}-${{ inputs.image }}

    - name: Start container
      shell: bash
      run: |
        name=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')
        if [ "${{ inputs.image }}" = "alma9" ]; then
          docker run --name container --privileged -v ${GITHUB_WORKSPACE}:/${name} -v ~/.cache/ccache:/root/.cache/ccache -d ghcr.io/key4hep/key4hep-images/alma9-cvmfs tail -f /dev/null
        elif [ "${{ inputs.image }}" = "ubuntu22" ]; then
          docker run --name container --privileged -v ${GITHUB_WORKSPACE}:/${name} -v ~/.cache/ccache:/root/.cache/ccache -d ghcr.io/key4hep/key4hep-images/ubuntu22-cvmfs tail -f /dev/null
        else
          echo "Unknown image"
          exit 1
        fi

    - name: Setup environment and build
      shell: bash
      run: |
          name=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')

          cat <<'EOF' > ${GITHUB_WORKSPACE}/script_container.sh
          set -e

          export CCACHE_DIR=/root/.cache/ccache
          export CCACHE_SLOPPINESS=include_file_ctime,include_file_mtime
          ccache --set-config=max_size=500M
          ccache -z

          name=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')

          if [ -x "$(command -v mold)" ]; then
            rm /usr/bin/ld
            ln -s /usr/bin/mold /usr/bin/ld
            echo "Using the mold linker"
          fi

          if [ "${{ inputs.build_type }}" = "release" ]; then
            source /cvmfs/sw.hsf.org/key4hep/setup.sh
          elif [ "${{ inputs.build_type }}" = "nightly" ]; then
            source /cvmfs/sw-nightlies.hsf.org/key4hep/setup.sh
          else
            echo "Unknown build type"
            exit 1
          fi

          cd /${name}
          k4_local_repo
          mkdir build
          cd build

          export PATH=$(echo $PATH | tr ':' '\n' | grep -v "/$name/" | tr '\n' ':')
          export LD_LIBRARY_PATH=$(echo $LD_LIBRARY_PATH | tr ':' '\n' | grep -v "/$name/" | tr '\n' ':')
          export ROOT_INCLUDE_PATH=$(echo $ROOT_INCLUDE_PATH | tr ':' '\n' | grep -v "/$name/" | tr '\n' ':')
          export CPATH=$(echo $CPATH | tr ':' '\n' | grep -v "/$name/" | tr '\n' ':')
          export PYTHONPATH=$(echo $PYTHONPATH | tr ':' '\n' | grep -v "/$name/" | tr '\n' ':')

          cmake .. -DCMAKE_CXX_STANDARD=20 -DCMAKE_INSTALL_PREFIX=../install -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_FLAGS="-Werror -Wno-error=cpp -Wno-error=deprecated-declarations" -G Ninja
          time ninja -k0 install
          ctest -j $(nproc) --output-on-failure
          ccache -s


          EOF

          chmod +x ${GITHUB_WORKSPACE}/script_container.sh

          # cat ${GITHUB_WORKSPACE}/script_container.sh

          docker exec container /bin/bash -c "/mount.sh && /${name}/script_container.sh"

          find ${GITHUB_WORKSPACE}

    - name: Upload EDM4hep file
      uses: actions/upload-artifact@v4
      with:
        name: EDM4hep file
        path: ${GITHUB_WORKSPACE}/build/test/output.root
        retention-days: 7
